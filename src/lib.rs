use failure::Fail;
use typed_igo::conjugation::*;

#[derive(Debug, Fail, Clone, PartialEq, Eq, Hash)]
pub enum ConjugationTransformError {
    #[fail(
        display = "This conjugation has no possible suffixes: {:?}",
        conjugation
    )]
    Unsupported { conjugation: Conjugation },

    #[fail(
        display = "If `{}` truely have the specified conjugation {:?}, the suffix of the word should be one of {:?}.",
        word, conjugation, suffixes_possible
    )]
    SuffixNotFound {
        word: String,
        conjugation: Conjugation,
        suffixes_possible: &'static [&'static str],
    },
}

pub fn get_suffixes(
    kind: ConjugationKind,
    form: ConjugationForm,
) -> Result<&'static [&'static str], ConjugationTransformError> {
    use typed_igo::conjugation::ConjugationForm::*;
    use typed_igo::conjugation::ConjugationKind::*;

    match (kind, form) {
        (KahenKuru, ImperativeI) => Ok(&["こい"]),
        (KahenKuru, Basic) => Ok(&["くる"]),
        (KahenKuru, NegativeU) => Ok(&["こよ"]),
        (KahenKuru, Continuous) => Ok(&["き"]),
        (KahenKuru, ConditionalContraction1) => Ok(&["くりゃ"]),
        (KahenKuru, SpecialAttributive) => Ok(&["くん"]),
        (KahenKuru, SpecialAttributive2) => Ok(&["く"]),
        (KahenKuru, Conditional) => Ok(&["くれ"]),
        (KahenKuru, Negative) => Ok(&["こ"]),
        (KahenKuru, ImperativeYo) => Ok(&["こよ"]),
        (KahenKuruKanji, SpecialAttributive) => Ok(&["来ん"]),
        (KahenKuruKanji, NegativeU) => Ok(&["来よ"]),
        (KahenKuruKanji, Negative) => Ok(&["来"]),
        (KahenKuruKanji, Conditional) => Ok(&["来れ"]),
        (KahenKuruKanji, ImperativeYo) => Ok(&["来よ"]),
        (KahenKuruKanji, Basic) => Ok(&["来る"]),
        (KahenKuruKanji, ConditionalContraction1) => Ok(&["来りゃ"]),
        (KahenKuruKanji, SpecialAttributive2) => Ok(&["来"]),
        (KahenKuruKanji, ImperativeI) => Ok(&["来い"]),
        (KahenKuruKanji, Continuous) => Ok(&["来"]),
        (SahenSuru, ConditionalContraction1) => Ok(&["すりゃ"]),
        (SahenSuru, SpecialAttributive) => Ok(&["すん"]),
        (SahenSuru, SpecialAttributive2) => Ok(&["す"]),
        (SahenSuru, NegativeNu) => Ok(&["せ"]),
        (SahenSuru, NegativeU) => Ok(&["しよ", "しょ"]),
        (SahenSuru, OldBasic) => Ok(&["す"]),
        (SahenSuru, Negative) => Ok(&["し"]),
        (SahenSuru, Conditional) => Ok(&["すれ"]),
        (SahenSuru, ImperativeYo) => Ok(&["せよ"]),
        (SahenSuru, NegativeReru) => Ok(&["さ"]),
        (SahenSuru, ImperativeRo) => Ok(&["しろ"]),
        (SahenSuru, Continuous) => Ok(&["し"]),
        (SahenSuru, Basic) => Ok(&["する"]),
        (SahenSuru, ImperativeI) => Ok(&["せい"]),
        (SahenSuruConnected, Negative) => Ok(&["し"]),
        (SahenSuruConnected, ConditionalContraction1) => Ok(&["すりゃ"]),
        (SahenSuruConnected, Conditional) => Ok(&["すれ"]),
        (SahenSuruConnected, Basic) => Ok(&["する"]),
        (SahenSuruConnected, OldBasic) => Ok(&["す"]),
        (SahenSuruConnected, NegativeU) => Ok(&["しよ", "しょ"]),
        (SahenSuruConnected, ImperativeYo) => Ok(&["せよ"]),
        (SahenSuruConnected, ImperativeRo) => Ok(&["しろ"]),
        (SahenSuruConnected, NegativeReru) => Ok(&["せ"]),
        (SahenZuruConnected, Conditional) => Ok(&["ずれ"]),
        (SahenZuruConnected, NegativeU) => Ok(&["ぜよ"]),
        (SahenZuruConnected, OldBasic) => Ok(&["ず"]),
        (SahenZuruConnected, ConditionalContraction1) => Ok(&["ずりゃ"]),
        (SahenZuruConnected, ImperativeYo) => Ok(&["ぜよ"]),
        (SahenZuruConnected, Basic) => Ok(&["ずる"]),
        (SahenZuruConnected, Negative) => Ok(&["ぜ"]),
        (Ichidan, Negative) => Ok(&[""]),
        (Ichidan, Continuous) => Ok(&[""]),
        (Ichidan, NegativeU) => Ok(&["よ"]),
        (Ichidan, ConditionalContraction1) => Ok(&["りゃ"]),
        (Ichidan, SpecialAttributive) => Ok(&["ん"]),
        (Ichidan, ImperativeYo) => Ok(&["よ"]),
        (Ichidan, Basic) => Ok(&["る"]),
        (Ichidan, Conditional) => Ok(&["れ"]),
        (Ichidan, ImperativeRo) => Ok(&["ろ"]),
        (IchidanYameru, Basic) => Ok(&["る"]),
        (GodanKaIonbin, Conditional) => Ok(&["け"]),
        (GodanKaIonbin, Negative) => Ok(&["か"]),
        (GodanKaIonbin, ConditionalContraction1) => Ok(&["きゃ"]),
        (GodanKaIonbin, NegativeU) => Ok(&["こ"]),
        (GodanKaIonbin, ContinuousTa) => Ok(&["い"]),
        (GodanKaIonbin, Continuous) => Ok(&["き"]),
        (GodanKaIonbin, ImperativeE) => Ok(&["け"]),
        (GodanKaIonbin, Basic) => Ok(&["く"]),
        (GodanKaSokuonbin, ImperativeE) => Ok(&["け"]),
        (GodanKaSokuonbin, Negative) => Ok(&["か"]),
        (GodanKaSokuonbin, NegativeU) => Ok(&["こ"]),
        (GodanKaSokuonbin, Conditional) => Ok(&["け"]),
        (GodanKaSokuonbin, Continuous) => Ok(&["き"]),
        (GodanKaSokuonbin, ContinuousTa) => Ok(&["っ"]),
        (GodanKaSokuonbin, ConditionalContraction1) => Ok(&["きゃ"]),
        (GodanKaSokuonbin, Basic) => Ok(&["く"]),
        (GodanKaSokuonbinYuku, Conditional) => Ok(&["け"]),
        (GodanKaSokuonbinYuku, ImperativeE) => Ok(&["け"]),
        (GodanKaSokuonbinYuku, ConditionalContraction1) => Ok(&["きゃ"]),
        (GodanKaSokuonbinYuku, Basic) => Ok(&["く"]),
        (GodanKaSokuonbinYuku, Negative) => Ok(&["か"]),
        (GodanKaSokuonbinYuku, NegativeU) => Ok(&["こ"]),
        (GodanKaSokuonbinYuku, Continuous) => Ok(&["き"]),
        (GodanGa, Basic) => Ok(&["ぐ"]),
        (GodanGa, NegativeU) => Ok(&["ご"]),
        (GodanGa, ContinuousTa) => Ok(&["い"]),
        (GodanGa, Conditional) => Ok(&["げ"]),
        (GodanGa, Continuous) => Ok(&["ぎ"]),
        (GodanGa, ImperativeE) => Ok(&["げ"]),
        (GodanGa, ConditionalContraction1) => Ok(&["ぎゃ"]),
        (GodanGa, Negative) => Ok(&["が"]),
        (GodanSa, ImperativeE) => Ok(&["せ"]),
        (GodanSa, Negative) => Ok(&["さ"]),
        (GodanSa, NegativeU) => Ok(&["そ"]),
        (GodanSa, Basic) => Ok(&["す"]),
        (GodanSa, Conditional) => Ok(&["せ"]),
        (GodanSa, ConditionalContraction1) => Ok(&["しゃ"]),
        (GodanSa, Continuous) => Ok(&["し"]),
        (GodanTa, ConditionalContraction1) => Ok(&["ちゃ"]),
        (GodanTa, Continuous) => Ok(&["ち"]),
        (GodanTa, NegativeU) => Ok(&["と"]),
        (GodanTa, Negative) => Ok(&["た"]),
        (GodanTa, Basic) => Ok(&["つ"]),
        (GodanTa, ContinuousTa) => Ok(&["っ"]),
        (GodanTa, Conditional) => Ok(&["て"]),
        (GodanTa, ImperativeE) => Ok(&["て"]),
        (GodanNa, Continuous) => Ok(&["に"]),
        (GodanNa, ConditionalContraction1) => Ok(&["にゃ"]),
        (GodanNa, NegativeU) => Ok(&["の"]),
        (GodanNa, ImperativeE) => Ok(&["ね"]),
        (GodanNa, ContinuousTa) => Ok(&["ん"]),
        (GodanNa, Conditional) => Ok(&["ね"]),
        (GodanNa, Basic) => Ok(&["ぬ"]),
        (GodanNa, Negative) => Ok(&["な"]),
        (GodanBa, Basic) => Ok(&["ぶ"]),
        (GodanBa, NegativeU) => Ok(&["ぼ"]),
        (GodanBa, ConditionalContraction1) => Ok(&["びゃ"]),
        (GodanBa, ImperativeE) => Ok(&["べ"]),
        (GodanBa, Negative) => Ok(&["ば"]),
        (GodanBa, Conditional) => Ok(&["べ"]),
        (GodanBa, ContinuousTa) => Ok(&["ん"]),
        (GodanBa, Continuous) => Ok(&["び"]),
        (GodanMa, Conditional) => Ok(&["め"]),
        (GodanMa, Basic) => Ok(&["む"]),
        (GodanMa, NegativeU) => Ok(&["も"]),
        (GodanMa, Continuous) => Ok(&["み"]),
        (GodanMa, ContinuousTa) => Ok(&["ん"]),
        (GodanMa, Negative) => Ok(&["ま"]),
        (GodanMa, ImperativeE) => Ok(&["め"]),
        (GodanMa, ConditionalContraction1) => Ok(&["みゃ"]),
        (GodanRa, SpecialAttributive2) => Ok(&[""]),
        (GodanRa, NegativeU) => Ok(&["ろ"]),
        (GodanRa, ImperativeE) => Ok(&["れ"]),
        (GodanRa, ConditionalContraction1) => Ok(&["りゃ"]),
        (GodanRa, Negative) => Ok(&["ら"]),
        (GodanRa, Conditional) => Ok(&["れ"]),
        (GodanRa, Continuous) => Ok(&["り"]),
        (GodanRa, SpecialAttributive) => Ok(&["ん"]),
        (GodanRa, Basic) => Ok(&["る"]),
        (GodanRa, NegativeSpecial) => Ok(&["ん"]),
        (GodanRa, ContinuousTa) => Ok(&["っ"]),
        (GodanRaAru, Continuous) => Ok(&["り"]),
        (GodanRaAru, Negative) => Ok(&["ら"]),
        (GodanRaAru, ContinuousTa) => Ok(&["っ"]),
        (GodanRaAru, ConditionalContraction1) => Ok(&["りゃ"]),
        (GodanRaAru, Conditional) => Ok(&["れ"]),
        (GodanRaAru, SpecialAttributive) => Ok(&["ん"]),
        (GodanRaAru, ImperativeE) => Ok(&["れ"]),
        (GodanRaAru, NegativeU) => Ok(&["ろ"]),
        (GodanRaAru, Basic) => Ok(&["る"]),
        (GodanRaSpecial, Negative) => Ok(&["ら"]),
        (GodanRaSpecial, Basic) => Ok(&["る"]),
        (GodanRaSpecial, NegativeSpecial) => Ok(&["ん"]),
        (GodanRaSpecial, Conditional) => Ok(&["れ"]),
        (GodanRaSpecial, Continuous) => Ok(&["い"]),
        (GodanRaSpecial, ImperativeI) => Ok(&["い"]),
        (GodanRaSpecial, ConditionalContraction1) => Ok(&["りゃ"]),
        (GodanRaSpecial, ContinuousTa) => Ok(&["っ"]),
        (GodanRaSpecial, ImperativeE) => Ok(&["れ"]),
        (GodanRaSpecial, NegativeU) => Ok(&["ろ"]),
        (GodanWaUonbin, Basic) => Ok(&["う"]),
        (GodanWaUonbin, ContinuousTa) => Ok(&["う"]),
        (GodanWaUonbin, Continuous) => Ok(&["い"]),
        (GodanWaUonbin, Conditional) => Ok(&["え"]),
        (GodanWaUonbin, ImperativeE) => Ok(&["え"]),
        (GodanWaUonbin, Negative) => Ok(&["わ"]),
        (GodanWaUonbin, NegativeU) => Ok(&["お"]),
        (GodanWaSokuonbin, NegativeU) => Ok(&["お"]),
        (GodanWaSokuonbin, Continuous) => Ok(&["い"]),
        (GodanWaSokuonbin, Conditional) => Ok(&["え"]),
        (GodanWaSokuonbin, ImperativeE) => Ok(&["え"]),
        (GodanWaSokuonbin, Basic) => Ok(&["う"]),
        (GodanWaSokuonbin, ContinuousTa) => Ok(&["っ"]),
        (GodanWaSokuonbin, Negative) => Ok(&["わ"]),
        (YodanKa, ImperativeE) => Ok(&["け"]),
        (YodanKa, Negative) => Ok(&["か"]),
        (YodanKa, Continuous) => Ok(&["き"]),
        (YodanKa, Basic) => Ok(&["く"]),
        (YodanKa, Conditional) => Ok(&["け"]),
        (YodanGa, ImperativeE) => Ok(&["げ"]),
        (YodanGa, Conditional) => Ok(&["げ"]),
        (YodanGa, Negative) => Ok(&["が"]),
        (YodanGa, Basic) => Ok(&["ぐ"]),
        (YodanGa, Continuous) => Ok(&["ぎ"]),
        (YodanSa, Continuous) => Ok(&["し"]),
        (YodanSa, Negative) => Ok(&["さ"]),
        (YodanSa, Basic) => Ok(&["す"]),
        (YodanSa, ImperativeE) => Ok(&["せ"]),
        (YodanSa, Conditional) => Ok(&["せ"]),
        (YodanTa, Negative) => Ok(&["た"]),
        (YodanTa, ImperativeE) => Ok(&["て"]),
        (YodanTa, Basic) => Ok(&["つ"]),
        (YodanTa, Continuous) => Ok(&["ち"]),
        (YodanTa, Conditional) => Ok(&["て"]),
        (YodanBa, Continuous) => Ok(&["び"]),
        (YodanBa, Negative) => Ok(&["ば"]),
        (YodanBa, Conditional) => Ok(&["べ"]),
        (YodanBa, Basic) => Ok(&["ぶ"]),
        (YodanBa, ImperativeE) => Ok(&["べ"]),
        (YodanMa, ImperativeE) => Ok(&["め"]),
        (YodanMa, Continuous) => Ok(&["み"]),
        (YodanMa, Basic) => Ok(&["む"]),
        (YodanMa, Negative) => Ok(&["ま"]),
        (YodanMa, Conditional) => Ok(&["め"]),
        (YodanRa, Continuous) => Ok(&["り"]),
        (YodanRa, ImperativeE) => Ok(&["れ"]),
        (YodanRa, Negative) => Ok(&["ら"]),
        (YodanRa, Basic) => Ok(&["る"]),
        (YodanRa, Conditional) => Ok(&["れ"]),
        (YodanHa, ImperativeE) => Ok(&["へ"]),
        (YodanHa, Negative) => Ok(&["は"]),
        (YodanHa, Continuous) => Ok(&["ひ"]),
        (YodanHa, Conditional) => Ok(&["へ"]),
        (YodanHa, Basic) => Ok(&["ふ"]),
        (Rahen, Continuous) => Ok(&["り"]),
        (Rahen, AttributiveConjunction) => Ok(&["る"]),
        (Rahen, Basic) => Ok(&["り"]),
        (Rahen, Conditional) => Ok(&["れ"]),
        (Rahen, Negative) => Ok(&["ら"]),
        (Rahen, ImperativeE) => Ok(&["れ"]),
        (KaminiDa, ModernBasic) => Ok(&["ず"]),
        (KaminiDa, Basic) => Ok(&["づ"]),
        (KaminiDa, Negative) => Ok(&["ぢ"]),
        (KaminiDa, Continuous) => Ok(&["ぢ"]),
        (KaminiDa, AttributiveConjunction) => Ok(&["づる", "ずる"]),
        (KaminiDa, Conditional) => Ok(&["づれ", "ずれ"]),
        (KaminiDa, ImperativeYo) => Ok(&["ぢよ"]),
        (KaminiHa, AttributiveConjunction) => Ok(&["ふる"]),
        (KaminiHa, Conditional) => Ok(&["ふれ"]),
        (KaminiHa, ImperativeYo) => Ok(&["ひよ"]),
        (KaminiHa, Negative) => Ok(&["ひ"]),
        (KaminiHa, Basic) => Ok(&["ふ"]),
        (KaminiHa, Continuous) => Ok(&["ひ"]),
        (ShimoniA, Continuous) => Ok(&["え"]),
        (ShimoniA, Conditional) => Ok(&["うれ"]),
        (ShimoniA, Negative) => Ok(&["え"]),
        (ShimoniA, ImperativeYo) => Ok(&["えよ"]),
        (ShimoniA, Basic) => Ok(&["う"]),
        (ShimoniA, AttributiveConjunction) => Ok(&["うる"]),
        (ShimoniKa, AttributiveConjunction) => Ok(&["くる"]),
        (ShimoniKa, Conditional) => Ok(&["くれ"]),
        (ShimoniKa, ImperativeYo) => Ok(&["けよ"]),
        (ShimoniKa, Continuous) => Ok(&["け"]),
        (ShimoniKa, Negative) => Ok(&["け"]),
        (ShimoniKa, Basic) => Ok(&["く"]),
        (ShimoniGa, Conditional) => Ok(&["ぐれ"]),
        (ShimoniGa, Negative) => Ok(&["げ"]),
        (ShimoniGa, Basic) => Ok(&["ぐ"]),
        (ShimoniGa, AttributiveConjunction) => Ok(&["ぐる"]),
        (ShimoniGa, ImperativeYo) => Ok(&["げよ"]),
        (ShimoniGa, Continuous) => Ok(&["げ"]),
        (ShimoniSa, Negative) => Ok(&["せ"]),
        (ShimoniSa, Basic) => Ok(&["す"]),
        (ShimoniSa, Conditional) => Ok(&["すれ"]),
        (ShimoniSa, Continuous) => Ok(&["せ"]),
        (ShimoniSa, AttributiveConjunction) => Ok(&["する"]),
        (ShimoniSa, ImperativeYo) => Ok(&["せよ"]),
        (ShimoniZa, ImperativeYo) => Ok(&["ぜよ"]),
        (ShimoniZa, Basic) => Ok(&["ず"]),
        (ShimoniZa, Negative) => Ok(&["ぜ"]),
        (ShimoniZa, Continuous) => Ok(&["ぜ"]),
        (ShimoniZa, AttributiveConjunction) => Ok(&["ずる"]),
        (ShimoniZa, Conditional) => Ok(&["ずれ"]),
        (ShimoniTa, Basic) => Ok(&["つ"]),
        (ShimoniTa, Negative) => Ok(&["て"]),
        (ShimoniTa, ImperativeYo) => Ok(&["てよ"]),
        (ShimoniTa, AttributiveConjunction) => Ok(&["つる"]),
        (ShimoniTa, Conditional) => Ok(&["つれ"]),
        (ShimoniTa, Continuous) => Ok(&["て"]),
        (ShimoniDa, Negative) => Ok(&["で"]),
        (ShimoniDa, Conditional) => Ok(&["づれ"]),
        (ShimoniDa, AttributiveConjunction) => Ok(&["づる"]),
        (ShimoniDa, Continuous) => Ok(&["で"]),
        (ShimoniDa, ImperativeYo) => Ok(&["でよ"]),
        (ShimoniDa, Basic) => Ok(&["づ"]),
        (ShimoniNa, Basic) => Ok(&["ぬ"]),
        (ShimoniNa, ImperativeYo) => Ok(&["ねよ"]),
        (ShimoniNa, AttributiveConjunction) => Ok(&["ぬる"]),
        (ShimoniNa, Conditional) => Ok(&["ぬれ"]),
        (ShimoniNa, Continuous) => Ok(&["ね"]),
        (ShimoniNa, Negative) => Ok(&["ね"]),
        (ShimoniHa, AttributiveConjunction) => Ok(&["ふる"]),
        (ShimoniHa, Negative) => Ok(&["へ"]),
        (ShimoniHa, ImperativeYo) => Ok(&["へよ"]),
        (ShimoniHa, Conditional) => Ok(&["ふれ"]),
        (ShimoniHa, Basic) => Ok(&["ふ"]),
        (ShimoniHa, Continuous) => Ok(&["へ"]),
        (ShimoniBa, AttributiveConjunction) => Ok(&["ぶる"]),
        (ShimoniBa, Negative) => Ok(&["べ"]),
        (ShimoniBa, Continuous) => Ok(&["べ"]),
        (ShimoniBa, Conditional) => Ok(&["ぶれ"]),
        (ShimoniBa, ImperativeYo) => Ok(&["べよ"]),
        (ShimoniBa, Basic) => Ok(&["ぶ"]),
        (ShimoniMa, Continuous) => Ok(&["め"]),
        (ShimoniMa, ImperativeYo) => Ok(&["めよ"]),
        (ShimoniMa, Negative) => Ok(&["め"]),
        (ShimoniMa, Basic) => Ok(&["む"]),
        (ShimoniMa, AttributiveConjunction) => Ok(&["むる"]),
        (ShimoniMa, Conditional) => Ok(&["むれ"]),
        (ShimoniYa, Conditional) => Ok(&["ゆれ"]),
        (ShimoniYa, AttributiveConjunction) => Ok(&["ゆる"]),
        (ShimoniYa, Continuous) => Ok(&["え"]),
        (ShimoniYa, Negative) => Ok(&["え"]),
        (ShimoniYa, ImperativeYo) => Ok(&["えよ"]),
        (ShimoniYa, Basic) => Ok(&["ゆ"]),
        (ShimoniRa, Conditional) => Ok(&["るれ"]),
        (ShimoniRa, ImperativeYo) => Ok(&["れよ"]),
        (ShimoniRa, Negative) => Ok(&["れ"]),
        (ShimoniRa, AttributiveConjunction) => Ok(&["るる"]),
        (ShimoniRa, Basic) => Ok(&["る"]),
        (ShimoniRa, Continuous) => Ok(&["れ"]),
        (ShimoniWa, AttributiveConjunction) => Ok(&["うる"]),
        (ShimoniWa, Negative) => Ok(&["ゑ"]),
        (ShimoniWa, Conditional) => Ok(&["うれ"]),
        (ShimoniWa, Continuous) => Ok(&["ゑ"]),
        (ShimoniWa, ImperativeYo) => Ok(&["ゑよ"]),
        (ShimoniWa, Basic) => Ok(&["う"]),
        (ShimoniU, Conditional) => Ok(&["得れ"]),
        (ShimoniU, Basic) => Ok(&["得"]),
        (ShimoniU, Continuous) => Ok(&["得"]),
        (ShimoniU, AttributiveConjunction) => Ok(&["得る"]),
        (ShimoniU, ImperativeYo) => Ok(&["得よ"]),
        (ShimoniU, Negative) => Ok(&["得"]),
        (ShimoniU, NegativeU) => Ok(&["得よ"]),
        (IchidanKureru, ImperativeE) => Ok(&["れ"]),
        (IchidanKureru, ConditionalContraction1) => Ok(&["れりゃ"]),
        (IchidanKureru, ImperativeYo) => Ok(&["れよ"]),
        (IchidanKureru, Continuous) => Ok(&["れ"]),
        (IchidanKureru, NegativeU) => Ok(&["れよ"]),
        (IchidanKureru, Basic) => Ok(&["れる"]),
        (IchidanKureru, Conditional) => Ok(&["れれ"]),
        (IchidanKureru, ImperativeRo) => Ok(&["れろ"]),
        (IchidanKureru, NegativeSpecial) => Ok(&["ん"]),
        (IchidanKureru, Negative) => Ok(&["れ"]),
        (IchidanRu, Conditional) => Ok(&["れ"]),
        (IchidanRu, Basic) => Ok(&["る"]),
        (IchidanRu, ImperativeRo) => Ok(&["ろ"]),
        (IchidanRu, ConditionalContraction1) => Ok(&["りゃ"]),
        (AdjectiveAUO, Conditional) => Ok(&["けれ"]),
        (AdjectiveAUO, NegativeNu) => Ok(&["から"]),
        (AdjectiveAUO, Basic) => Ok(&["い"]),
        (AdjectiveAUO, ImperativeE) => Ok(&["かれ"]),
        (AdjectiveAUO, OldBasic) => Ok(&["し"]),
        (AdjectiveAUO, ConditionalContraction1) => Ok(&["けりゃ"]),
        (AdjectiveAUO, ContinuousTa) => Ok(&["かっ"]),
        (AdjectiveAUO, NegativeU) => Ok(&["かろ"]),
        (AdjectiveAUO, AttributiveConjunction) => Ok(&["き"]),
        (AdjectiveAUO, ConditionalContraction2) => Ok(&["きゃ"]),
        (AdjectiveAUO, Garu) => Ok(&[""]),
        (AdjectiveAUO, ContinuousTe) => Ok(&["く", "くっ"]),
        (AdjectiveAUO, ContinuousGozai) => Ok(&["う", "ぅ"]),
        (AdjectiveI, ConditionalContraction1) => Ok(&["けりゃ"]),
        (AdjectiveI, ConditionalContraction2) => Ok(&["きゃ"]),
        (AdjectiveI, ContinuousTa) => Ok(&["かっ"]),
        (AdjectiveI, OldBasic) => Ok(&[""]),
        (AdjectiveI, Garu) => Ok(&[""]),
        (AdjectiveI, NegativeNu) => Ok(&["から"]),
        (AdjectiveI, ContinuousTe) => Ok(&["く", "くっ"]),
        (AdjectiveI, Conditional) => Ok(&["けれ"]),
        (AdjectiveI, Basic) => Ok(&["い"]),
        (AdjectiveI, ContinuousGozai) => Ok(&["ゅう", "ゅぅ"]),
        (AdjectiveI, AttributiveConjunction) => Ok(&["き"]),
        (AdjectiveI, NegativeU) => Ok(&["かろ"]),
        (AdjectiveI, ImperativeE) => Ok(&["かれ"]),
        (SpecialNai, ConditionalContraction1) => Ok(&["なけりゃ"]),
        (SpecialNai, Conditional) => Ok(&["なけれ"]),
        (SpecialNai, OldBasic) => Ok(&["なし"]),
        (SpecialNai, ContinuousTa) => Ok(&["なかっ", "なかつ"]),
        (SpecialNai, ContinuousGozai) => Ok(&["のう"]),
        (SpecialNai, NegativeU) => Ok(&["なかろ"]),
        (SpecialNai, ContinuousDe) => Ok(&["ない"]),
        (SpecialNai, Garu) => Ok(&["な"]),
        (SpecialNai, ContinuousTe) => Ok(&["なく", "なくっ"]),
        (SpecialNai, NegativeNu) => Ok(&["なから"]),
        (SpecialNai, ConditionalContraction2) => Ok(&["なきゃ"]),
        (SpecialNai, OnbinBasic) => Ok(&["ねえ", "ねぇ"]),
        (SpecialNai, Basic) => Ok(&["ない"]),
        (SpecialNai, ImperativeE) => Ok(&["なかれ"]),
        (SpecialNai, AttributiveConjunction) => Ok(&["なき"]),
        (SpecialTai, OnbinBasic) => Ok(&["てえ", "てぇ"]),
        (SpecialTai, OldBasic) => Ok(&["たし"]),
        (SpecialTai, NegativeNu) => Ok(&["たから"]),
        (SpecialTai, NegativeU) => Ok(&["たかろ"]),
        (SpecialTai, Conditional) => Ok(&["たけれ"]),
        (SpecialTai, AttributiveConjunction) => Ok(&["たき"]),
        (SpecialTai, ConditionalContraction2) => Ok(&["たきゃ"]),
        (SpecialTai, ConditionalContraction1) => Ok(&["たけりゃ"]),
        (SpecialTai, Garu) => Ok(&["た"]),
        (SpecialTai, Basic) => Ok(&["たい"]),
        (SpecialTai, ContinuousTa) => Ok(&["たかっ", "たかつ"]),
        (SpecialTai, ContinuousTe) => Ok(&["たく", "たくっ"]),
        (SpecialTai, ContinuousGozai) => Ok(&["とう"]),
        (SpecialTa, Conditional) => Ok(&["ら"]),
        (SpecialTa, Basic) => Ok(&[""]),
        (SpecialTa, Negative) => Ok(&["ろ"]),
        (SpecialDa, ContinuousTa) => Ok(&["だっ"]),
        (SpecialDa, ImperativeE) => Ok(&["なれ"]),
        (SpecialDa, Continuous) => Ok(&["で"]),
        (SpecialDa, Conditional) => Ok(&["なら"]),
        (SpecialDa, AttributiveConjunction) => Ok(&["な"]),
        (SpecialDa, Negative) => Ok(&["だろ", "だら"]),
        (SpecialDa, Basic) => Ok(&["だ"]),
        (SpecialDesu, Continuous) => Ok(&["し"]),
        (SpecialDesu, Basic) => Ok(&["す"]),
        (SpecialDesu, Negative) => Ok(&["しょ"]),
        (SpecialJa, Continuous) => Ok(&["っ"]),
        (SpecialJa, Basic) => Ok(&[""]),
        (SpecialJa, Negative) => Ok(&["ろ"]),
        (SpecialMasu, Negative) => Ok(&["せ"]),
        (SpecialMasu, NegativeU) => Ok(&["しょ"]),
        (SpecialMasu, Conditional) => Ok(&["すれ"]),
        (SpecialMasu, ImperativeE) => Ok(&["せ"]),
        (SpecialMasu, Continuous) => Ok(&["し"]),
        (SpecialMasu, Basic) => Ok(&["す"]),
        (SpecialMasu, ImperativeI) => Ok(&["し"]),
        (SpecialNu, ContinuousNi) => Ok(&["ず"]),
        (SpecialNu, Conditional) => Ok(&["ね", "ざれ", "ずん"]),
        (SpecialNu, Basic) => Ok(&["ぬ"]),
        (SpecialNu, Continuous) => Ok(&["ざり"]),
        (SpecialNu, AttributiveConjunction) => Ok(&["ざる"]),
        (SpecialNu, OldBasic) => Ok(&["ず"]),
        (OldBeshi, Negative) => Ok(&["から"]),
        (OldBeshi, AttributiveConjunction) => Ok(&["き"]),
        (OldBeshi, Conditional) => Ok(&["けれ"]),
        (OldBeshi, Basic) => Ok(&["し"]),
        (OldBeshi, Continuous) => Ok(&["く"]),
        (OldGotoshi, Continuous) => Ok(&["く"]),
        (OldGotoshi, Basic) => Ok(&["し"]),
        (OldGotoshi, AttributiveConjunction) => Ok(&["き"]),
        (OldNari, Negative) => Ok(&["ら"]),
        (OldNari, Conditional) => Ok(&["れ"]),
        (OldNari, ImperativeE) => Ok(&["れ"]),
        (OldNari, Basic) => Ok(&["り"]),
        (OldNari, AttributiveConjunction) => Ok(&["る"]),
        (OldMaji, Conditional) => Ok(&["けれ"]),
        (OldMaji, Continuous) => Ok(&["く"]),
        (OldMaji, Basic) => Ok(&[""]),
        (OldMaji, AttributiveConjunction) => Ok(&["き"]),
        (OldShimu, ImperativeYo) => Ok(&["めよ"]),
        (OldShimu, Basic) => Ok(&["む"]),
        (OldShimu, Continuous) => Ok(&["め"]),
        (OldShimu, Negative) => Ok(&["め"]),
        (OldShimu, AttributiveConjunction) => Ok(&["むる"]),
        (OldShimu, Conditional) => Ok(&["むれ"]),
        (OldShimu, ImperativeE) => Ok(&["むれ"]),
        (OldKi, ImperativeE) => Ok(&["しか"]),
        (OldKi, Basic) => Ok(&["き"]),
        (OldKi, AttributiveConjunction) => Ok(&["し"]),
        (OldKeri, Basic) => Ok(&["り"]),
        (OldKeri, AttributiveConjunction) => Ok(&["る"]),
        (OldRi, AttributiveConjunction) => Ok(&["る"]),
        (OldRi, Basic) => Ok(&["り"]),
        (OldRu, ImperativeYo) => Ok(&["れよ"]),
        (OldRu, Basic) => Ok(&["る"]),
        (OldRu, Negative) => Ok(&["れ"]),
        (OldRu, Conditional) => Ok(&["るれ"]),
        (OldRu, ImperativeE) => Ok(&["るれ"]),
        (OldRu, AttributiveConjunction) => Ok(&["るる"]),
        (OldRu, Continuous) => Ok(&["れ"]),
        (NoConjugation, Basic) => Ok(&[""]),
        (AdjectiveII, BasicSokuonbin) => Ok(&["いっ", "いいっ"]),
        (AdjectiveII, Basic) => Ok(&["い"]),
        (SpecialDosu, Basic) => Ok(&["す"]),
        (IchidanEru, Conditional) => Ok(&["れ"]),
        (IchidanEru, Basic) => Ok(&["る"]),
        (SpecialYa, Continuous) => Ok(&["っ"]),
        (SpecialYa, Negative) => Ok(&["ろ"]),
        (SpecialYa, Basic) => Ok(&[""]),
        _ => Err(ConjugationTransformError::Unsupported {
            conjugation: Conjugation { kind, form },
        }),
    }
}

pub fn convert(
    orig: &str,
    kind: ConjugationKind,
    from: ConjugationForm,
    to: ConjugationForm,
) -> Result<String, ConjugationTransformError> {
    let from_suffixes = get_suffixes(kind, from)?;
    let from_suffix = from_suffixes
        .iter()
        .find(|&suffix| orig.ends_with(suffix))
        .ok_or_else(|| ConjugationTransformError::SuffixNotFound {
            word: orig.into(),
            conjugation: Conjugation { kind, form: from },
            suffixes_possible: from_suffixes,
        })?;
    let orig_base = &orig[0..orig.len() - from_suffix.len()];

    // TODO: make a good way to select appropriate candidate?
    //       currently use first one in any ways.
    let to_suffix = get_suffixes(kind, to)?
        .get(0)
        .expect("cannot get conjugation suffix.");

    Ok(format!("{}{}", orig_base, to_suffix))
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_convert() {
        assert_eq!(
            convert(
                "こ",
                ConjugationKind::KahenKuru,
                ConjugationForm::Negative,
                ConjugationForm::Basic,
            ),
            Ok("くる".into())
        );

        assert_eq!(
            convert(
                "する",
                ConjugationKind::SahenSuru,
                ConjugationForm::Basic,
                ConjugationForm::Continuous,
            ),
            Ok("し".into())
        );

        assert_eq!(
            convert(
                "する",
                ConjugationKind::SahenSuru,
                ConjugationForm::Basic,
                ConjugationForm::Continuous,
            ),
            Ok("し".into())
        );
    }
}
